# This is a GitHub workflow defining a set of jobs with a set of steps.
# ref: https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions
#
name: Test

# Trigger the workflow's on pushed branches, pull requests, and manually run
# workflows.
on:
  pull_request:
    paths-ignore:
      - "docs/**"
      - "**.md"
      - ".github/workflows/*"
      - "!.github/workflows/test-chart.yaml"
  push:
    paths-ignore:
      - "docs/**"
      - "**.md"
      - ".github/workflows/*"
      - "!.github/workflows/test-chart.yaml"
    branches-ignore:
      - "dependabot/**"
      - "pre-commit-ci-update-config"
  workflow_dispatch:

jobs:
  run-pytest:
    name: Run pytest
    runs-on: ubuntu-20.04
    timeout-minutes: 10

    strategy:
      # Keep running even if one variation of the job fail
      fail-fast: false
      matrix:
        # We run this job multiple times with different parameterization
        # specified below, these parameters have no meaning on their own and
        # gain meaning on how job steps use them.
        #
        # k3s-channel:        https://update.k3s.io/v1-release/channels
        # kubernetes_asyncio:  https://github.com/tomplus/kubernetes_asyncio/tags
        #
        include:
          # Tests with oldest supported Python, k8s, and k8s client
          - python: "3.7"
            k3s: v1.20
            test_dependencies: kubernetes_asyncio==19.*

          # Test with modern python and k8s versions
          - python: "3.9"
            k3s: stable
          - python: "3.9"
            k3s: latest

          # Test with latest python and JupyterHub in main branch
          - python: "3.10"
            k3s: latest
            test_dependencies: git+https://github.com/jupyterhub/jupyterhub

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "${{ matrix.python }}"

      - name: Install package and test dependencies
        run: |
          pip install --upgrade pip
          pip install -e ".[test]" ${{ matrix.test_dependencies }}
          pip freeze

      # Starts a k8s cluster with NetworkPolicy enforcement and installs both
      # kubectl and helm. We won't need network policy enforcement or helm
      # though.
      #
      # ref: https://github.com/jupyterhub/action-k3s-helm/
      - uses: jupyterhub/action-k3s-helm@v1
        with:
          k3s-channel: ${{ matrix.k3s }}
          metrics-enabled: false
          traefik-enabled: false
          docker-enabled: false

      - name: Run pytest
        run: |
          pytest -v --durations 10 --cov kubespawner --color=yes

      # ref: https://github.com/jupyterhub/action-k8s-namespace-report
      - name: Kubernetes namespace report
        uses: jupyterhub/action-k8s-namespace-report@v1
        if: always()

      - name: Submit a codecov report
        run: |
          pip install codecov
          codecov

  # Keep this job synced with the publish job in publish.yaml!
  package-build:
    name: Test package build
    runs-on: ubuntu-20.04
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: install build package
        run: |
          pip install --upgrade pip
          pip install build
          pip freeze

      - name: build release
        run: |
          python -m build --sdist --wheel .
          ls -alh dist
